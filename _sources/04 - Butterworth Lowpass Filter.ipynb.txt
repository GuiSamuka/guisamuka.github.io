{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"04 - Butterworth Lowpass Filter.ipynb","provenance":[],"collapsed_sections":["mcBNOeRY6RRn","GRpXA7FX6Zv6"],"mount_file_id":"1djtbXBuYEnUxegdkHeSwStMxnDRlqOYP","authorship_tag":"ABX9TyOKnJJIu3SDe6ekfV7G1liu"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"mcBNOeRY6RRn"},"source":["# Reading the data \n","\n","---\n","\n","Lately, the _.fits_ data was transformed into _.csv_ and saved in database/csv_files. We are going to import a light curve sample and work with it."]},{"cell_type":"code","metadata":{"id":"AZ5qBIGw6MBM"},"source":["FILE_PATH = '/content/drive/MyDrive/01 - Iniciação Científica/02 - Datasets/csv_files/EN2_STAR_CHR_0101086161_20070516T060226_20071005T074409.csv'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VZ__yokx6UCK","executionInfo":{"elapsed":1083,"status":"ok","timestamp":1619553042784,"user":{"displayName":"Guilherme Samuel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi5zFr3jUWJ1NdrUB6KSy3C4B0uR2RLqUiKRzi0S2M=s64","userId":"17398030156076443435"},"user_tz":180},"outputId":"1bb4c84d-364b-4807-c293-41958a63deeb"},"source":["import pandas as pd\n","\n","data_sample = pd.read_csv(FILE_PATH)\n","display(data_sample)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DATE</th>\n","      <th>WHITEFLUX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2007-05-16 18:10:55.071642</td>\n","      <td>112626.77</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2007-05-16 18:19:27.113766</td>\n","      <td>112605.61</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2007-05-16 18:27:59.155929</td>\n","      <td>112771.50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2007-05-16 18:36:31.198092</td>\n","      <td>113113.60</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2007-05-16 18:45:03.240256</td>\n","      <td>112621.79</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>23946</th>\n","      <td>2007-10-05 19:08:02.358665</td>\n","      <td>112438.61</td>\n","    </tr>\n","    <tr>\n","      <th>23947</th>\n","      <td>2007-10-05 19:16:34.313684</td>\n","      <td>112406.01</td>\n","    </tr>\n","    <tr>\n","      <th>23948</th>\n","      <td>2007-10-05 19:25:06.268742</td>\n","      <td>112496.13</td>\n","    </tr>\n","    <tr>\n","      <th>23949</th>\n","      <td>2007-10-05 19:33:38.223801</td>\n","      <td>112344.83</td>\n","    </tr>\n","    <tr>\n","      <th>23950</th>\n","      <td>2007-10-05 19:42:10.178859</td>\n","      <td>112318.50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>23951 rows × 2 columns</p>\n","</div>"],"text/plain":["                             DATE  WHITEFLUX\n","0      2007-05-16 18:10:55.071642  112626.77\n","1      2007-05-16 18:19:27.113766  112605.61\n","2      2007-05-16 18:27:59.155929  112771.50\n","3      2007-05-16 18:36:31.198092  113113.60\n","4      2007-05-16 18:45:03.240256  112621.79\n","...                           ...        ...\n","23946  2007-10-05 19:08:02.358665  112438.61\n","23947  2007-10-05 19:16:34.313684  112406.01\n","23948  2007-10-05 19:25:06.268742  112496.13\n","23949  2007-10-05 19:33:38.223801  112344.83\n","23950  2007-10-05 19:42:10.178859  112318.50\n","\n","[23951 rows x 2 columns]"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"UiKcIT7-6Uqb"},"source":["import numpy as np\n","\n","x = data_sample.DATE.to_numpy()\n","y = data_sample.WHITEFLUX.to_numpy()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GRpXA7FX6Zv6"},"source":["# Butterworth Transfer Function\n","\n","---\n","\n","The transfer function of a Butterworth 1-D lowpass filter (BLPF) of order $n$, and with cutoff frequency at a distance $D_0$ from the origin, is defined as\n","\n","$$ H(u) = \\frac{1}{ 1 + [D(u) / D_0]^{2n} } $$ \n","\n","where $D(u)$ and $D_0$ was defined on `03 - Ideal Lowpass Filters.ipynb`.\n","\n","By the definition, the Butterworth filter have two free parameters: the cutoff frequency and the filtering order. Then, we can modify both, as we can see on the code cell below, intending to have the best results possibles.\n","\n","Note. The cutoff frequency must be given in Nyquist."]},{"cell_type":"code","metadata":{"id":"ObRjbliL6mWH"},"source":["order       = 2\n","cutoff_freq = 0.2"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jRDrq6Li6mmp"},"source":["def butterworth_array(array, fourier_transform, cutoff_freq, order):\n","  # Extrating information of the signal\n","  n_time = len(array)              \n","  D0 = cutoff_freq * n_time        \n","  xc = n_time     \n","\n","  # Creating the filter array\n","  len_filter = len(fourier_transform)          \n","  filter = np.zeros(len_filter)   \n","\n","  for i in range(len_filter):\n","    filter[i] = 1.0 / (1.0+(abs(i-(xc-1.0))/D0)**(2.0*order))\n","\n","  return filter"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uheqY44E6rrf"},"source":["# Choosing the best Butterworth parameters\n","\n","---\n","\n","On `filters` module, we can pass `butterworth` on the `filter_technique` and it will makes all the procedures for the Butterworth Lowpass filter."]},{"cell_type":"code","metadata":{"id":"uh_IKUk-6zMw"},"source":["from tools import *"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"O6wNhTNB_kMJ"},"source":["## Plotting different cutoff frequencies and orders"]},{"cell_type":"code","metadata":{"id":"Xec-4ZOiALZE"},"source":["orders = [1, 2, 3, 4, 5, 6]\n","cutoff_freqs = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"16AROdhc-l8n4xuuoHzHe4MP9AOB3RNd7"},"id":"I1ctHlq7AstF","executionInfo":{"elapsed":61690,"status":"ok","timestamp":1619553103430,"user":{"displayName":"Guilherme Samuel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi5zFr3jUWJ1NdrUB6KSy3C4B0uR2RLqUiKRzi0S2M=s64","userId":"17398030156076443435"},"user_tz":180},"outputId":"f69eebad-791d-4aec-9b88-93ffca480962"},"source":["for order in orders:\n","  for cutoff_freq in cutoff_freqs:\n","    Filter = filters.FrequencyDomainFiltering()\n","    Filter.filter(array=y, filter_technique='butterworth', numExpansion=70, cutoff_freq=cutoff_freq, order=order)\n","    y_filtered = Filter.getFiltered\n","    title = f\"Butterworth filter with Order = {order} and Cutoff frequency = {cutoff_freq}\"\n","    viz.view_filter_results(x, y, x, y_filtered, title=title)\n","    print()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]}]}